language: julia
os:
  - linux
  - osx
julia:
  - 0.6
  - 0.7
  - 1.0
  - nightly
matrix:
  allow_failures:
    - julia: nightly
cache:
 directories:
   - /home/travis/.julia
addons:
  apt_packages:
    - gfortran
before_install:
- |
    if [[ "$TRAVIS_JULIA_VERSION" == "0.6" ]]; then
      julia -e 'if "InfrastructureModels" in keys(Pkg.installed()) Pkg.rm("InfrastructureModels"); Pkg.rm("InfrastructureModels") end'
      julia -e 'Pkg.update()'
      julia -e 'if !("Coverage" in keys(Pkg.installed())) Pkg.add("Coverage") end'
      julia -e 'if !("Documenter" in keys(Pkg.installed())) Pkg.add("Documenter") end'
    else
      julia -e 'using Pkg; Pkg.update()'
    fi
script:
  julia -e 'using Pkg; Pkg.clone(pwd())'
  julia -e 'using Pkg; Pkg.test("InfrastructureModels", coverage=true)'
after_success:
- |
    if [[ "$TRAVIS_JULIA_VERSION" == "0.6" ]]; then
      julia -e  'using Coverage; cd(Pkg.dir("InfrastructureModels")); LCOV.writefile("lcov.info", process_folder(".")); run(pipeline(`curl -s https://codecov.io/bash`, `bash`))'
      julia -e 'cd(Pkg.dir("InfrastructureModels")); include(joinpath("docs", "make.jl"))'
    else
      julia -e  'using Coverage; import InfrastructureModels; joinpath(dirname(pathof(InfrastructureModels)); LCOV.writefile("lcov.info", process_folder(".")); run(pipeline(`curl -s https://codecov.io/bash`, `bash`))'
    fi
jobs:
  include:
    - stage: "Documentation"
      julia: 1.0
      os: linux
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'
        - julia --project=docs/ docs/make.jl
      after_success: skip
